if {"::tcltest" ni [namespace children]} {
    package require tcltest 2
    namespace import -force ::tcltest::*
}

::tcl::tm::path add [file normalize [file join [file dirname [info script]] ..]]
package require senSML
package require lambda

# Source package for equality of list of dictionaries and callback collection
source [file join [file dirname [info script]] ldict.tcl]
source [file join [file dirname [info script]] collect.tcl]

# Define a customMatch for booleans it makes test more readable
customMatch boolean [lambda {expected actual} {
  if { [string is true $expected] && [string is true $actual] } { return 1 }
  if { [string is false $expected] && [string is false $actual] } { return 1 }
  return 0
}]

test stream-empty-1 {Testing empty context} -match boolean -body {
  collect init
  set s [senSML -callback ::collect::collect]
  $s delete
  collect is {}
} -result true

test stream-empty-2 {Testing empty context} -match boolean -body {
  collect init
  set s [senSML -callback ::collect::collect]
  $s begin
  $s delete
  collect is {
    OPEN {}
    CLOSE {}
  }
} -result true

test stream-empty-2 {Testing empty context} -match boolean -body {
  collect init
  set s [senSML -callback ::collect::collect]
  $s begin
  $s end
  $s delete
  collect is {
    OPEN {}
    CLOSE {}
  }
} -result true

test stream-packing {Testing two packs} -match boolean -body {
  collect init

  set s [senSML -callback ::collect::collect]
  $s begin
  $s jsonpack {{"n":"urn:dev:ow:10e2073a01080063","u":"Cel","t":1.276020076e+09,"v":23.5}}
  $s jsonpack {{"n":"urn:dev:ow:10e2073a01080063","u":"Cel","t":1.276020091e+09,"v":23.6}}
  $s end
  $s delete

  collect is {
    OPEN {}
    PACK { n "urn:dev:ow:10e2073a01080063" u Cel t 1.276020076e+09 v 23.5 }
    PACK { n "urn:dev:ow:10e2073a01080063" u Cel t 1.276020091e+09 v 23.6 }
    CLOSE {}
  }
} -result true

test stream-packing-lazy {Testing two packs (lazy coder)} -match boolean -body {
  collect init

  set s [senSML -callback ::collect::collect]
  $s jsonpack {{"n":"urn:dev:ow:10e2073a01080063","u":"Cel","t":1.276020076e+09,"v":23.5}}
  $s jsonpack {{"n":"urn:dev:ow:10e2073a01080063","u":"Cel","t":1.276020091e+09,"v":23.6}}
  $s delete

  collect is {
    OPEN {}
    PACK { n "urn:dev:ow:10e2073a01080063" u Cel t 1.276020076e+09 v 23.5 }
    PACK { n "urn:dev:ow:10e2073a01080063" u Cel t 1.276020091e+09 v 23.6 }
    CLOSE {}
  }
} -result true

test stream-streaming {Testing streaming} -match boolean -body {
  collect init

  set s [senSML -callback ::collect::collect]
  $s stream {[{"n":"urn:dev:ow:10e2073a01080063","u":"Cel","t":1.276020076e+09,"v":23.5},}
  $s stream {{"n":"urn:dev:ow:10e2073a01080063","u":"Cel","t":1.276020091e+09,"v":23.6},}
  $s delete

  collect is {
    OPEN {}
    PACK { n "urn:dev:ow:10e2073a01080063" u Cel t 1.276020076e+09 v 23.5 }
    PACK { n "urn:dev:ow:10e2073a01080063" u Cel t 1.276020091e+09 v 23.6 }
    CLOSE {}
  }
} -result true

test stream-streaming-incomplete-1 {Testing incomplete streaming} -match boolean -body {
  collect init

  set s [senSML -callback ::collect::collect]
  $s stream {[{"n":"urn:dev:ow:10e2073a01080063","u":"Cel","t":1.276020076e+09,"v":23.5},}
  $s stream {{"n":"urn:dev:ow:10e2073a01080063","u":"Cel","t":1.276020091e+09,"v":23.6},}
  $s stream "{\"n\":\"urn:dev:ow:10e2073a01080063\","
  $s stream "\"u\":\"Cel\",\"t\":1.276020099e+09,\"v\":23.7},"
  $s delete

  collect is {
    OPEN {}
    PACK { n "urn:dev:ow:10e2073a01080063" u Cel t 1.276020076e+09 v 23.5 }
    PACK { n "urn:dev:ow:10e2073a01080063" u Cel t 1.276020091e+09 v 23.6 }
    PACK { n "urn:dev:ow:10e2073a01080063" u Cel t 1.276020099e+09 v 23.7 }
    CLOSE {}
  }
} -result true

test stream-streaming-incomplete-2 {Testing incomplete streaming} -match boolean -body {
  collect init

  set s [senSML -callback ::collect::collect]
  $s stream {[{"n":"urn:dev:ow:10e2073a01080063","u":"Cel","t":1.276020076e+09,"v":23.5},}
  $s stream {{"n":"urn:dev:ow:10e2073a01080063","u":"Cel","t":1.276020091e+09,"v":23.6}}
  $s stream ",{\"n\":\"urn:dev:ow:10e2073a01080063\","
  $s stream "\"u\":\"Cel\",\"t\":1.276020099e+09,\"v\":23.7},"
  $s delete

  collect is {
    OPEN {}
    PACK { n "urn:dev:ow:10e2073a01080063" u Cel t 1.276020076e+09 v 23.5 }
    PACK { n "urn:dev:ow:10e2073a01080063" u Cel t 1.276020091e+09 v 23.6 }
    PACK { n "urn:dev:ow:10e2073a01080063" u Cel t 1.276020099e+09 v 23.7 }
    CLOSE {}
  }
} -result true

test stream-streaming-incomplete-3 {Testing incomplete streaming} -match boolean -body {
  collect init

  set s [senSML -callback ::collect::collect]
  $s stream {[ {"n":"urn:dev:ow:10e2073a01080063","u":"Cel","t":1.276020076e+09,"v":23.5} ,  }
  $s stream {{"n":"urn:dev:ow:10e2073a01080063","u":"Cel","t":1.276020091e+09,"v":23.6 } ,   }
  $s stream "{\"n\":\"urn:dev:ow:10e2073a01080063\","
  $s stream "\"u\":\"Cel\",\"t\":1.276020099e+09,\"v\":23.7},"
  $s delete

  collect is {
    OPEN {}
    PACK { n "urn:dev:ow:10e2073a01080063" u Cel t 1.276020076e+09 v 23.5 }
    PACK { n "urn:dev:ow:10e2073a01080063" u Cel t 1.276020091e+09 v 23.6 }
    PACK { n "urn:dev:ow:10e2073a01080063" u Cel t 1.276020099e+09 v 23.7 }
    CLOSE {}
  }
} -result true

